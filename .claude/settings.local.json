{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(pip install:*)",
      "Bash(greenlang:*)",
      "Bash(python:*)",
      "Bash(C:\\Users\\rshar\\AppData\\Roaming\\Python\\Python313\\Scripts\\greenlang.exe --version)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(./greenlang.bat --version)",
      "Bash(./greenlang.bat)",
      "Bash(./greenlang.bat calc)",
      "Bash(copy main.py main_original.py)",
      "Bash(cp:*)",
      "Bash(grep:*)",
      "Bash(move:*)",
      "Bash(mv:*)",
      "Bash(copy:*)",
      "Bash(dir:*)",
      "Bash(cmd /c \"greenlang.bat calc < test_calc_input.txt\")",
      "Bash(gl:*)",
      "Bash(pip show:*)",
      "mcp__ide__getDiagnostics",
      "Read(c:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang\\greenlang\\core/**)",
      "Read(c:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang\\greenlang\\core/**)",
      "Read(c:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang/**)",
      "Read(c:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang/**)",
      "Read(c:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang/**)",
      "Read(c:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang/**)",
      "Bash(./gl.bat --help)",
      "Bash(../../gl.bat verify sbom.spdx.json --verbose)",
      "Bash(make:*)",
      "Bash(find:*)",
      "Bash(PYTHONPATH=. python tests/test_greenlang.py)",
      "Bash(./gl.bat verify:*)",
      "Bash(./gl.bat run:*)",
      "Read(//c/Users/rshar/Desktop/**)",
      "Bash(./gl --help)",
      "Bash(./gl init pack-basic tmp-pack)",
      "Bash(where:*)",
      "Bash(./gl pack list)",
      "Bash(opa version:*)",
      "Bash(./gl pack publish packs/boiler-solar)",
      "Bash(echo:*)",
      "Bash(./opa.exe version:*)",
      "Bash(set PATH=%PATH%)",
      "Bash(%CD%)",
      "Bash(./gl policy check test-gpl-pack)",
      "Bash(./gl run test_pipeline.yaml -i inputs.json)",
      "Bash(./gl run --help)",
      "Bash(./gl run test_pipeline.yaml --inputs inputs.json)",
      "Bash(./opa.exe eval:*)",
      "Bash(./gl run list)",
      "Bash(./gl run test_pipeline.yaml info)",
      "Bash(./gl run info test_pipeline.yaml)",
      "Bash(./gl.bat init pack-basic tmp-pack)",
      "Bash(./gl.bat init:*)",
      "Bash(./gl.bat pack list)",
      "Bash(../gl.bat pack validate)",
      "Bash(./gl.bat pack validate tmp-pack)",
      "Bash(./gl.bat pack publish packs/boiler-solar)",
      "Bash(./gl.bat policy check test-gpl-pack)",
      "Bash(./gl.bat policy check test-gpl-detailed.yaml)",
      "Bash(opa.exe version:*)",
      "Bash(cat:*)",
      "Bash(tee:*)",
      "Bash(./gl pack:*)",
      "Bash(./gl verify --help)",
      "Bash(./gl:*)",
      "Bash(\"C:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang\\gl\" verify pack.yaml --sig pack.sig --verbose)",
      "Bash(\"C:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang\\gl\" verify pack.yaml)",
      "Bash(\"C:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang\\gl\" verify sbom.spdx.json)",
      "Bash(\"C:\\Users\\rshar\\Desktop\\Akshay Makar\\Tools\\GreenLang\\Code V1_GreenLang\\gl\" verify --sig pack.sig --verbose pack.yaml)",
      "Bash(../gl pack validate)",
      "Bash(tree:*)",
      "Bash(../gl pack install .)",
      "Bash(then echo \"✓ PASS\")",
      "Bash(else echo \"✗ FAIL\")",
      "Bash(fi)",
      "Read(//c/**)",
      "Bash(/dev/null)",
      "Bash(sed:*)",
      "Bash(xargs cat:*)",
      "Bash(chmod:*)",
      "Bash(del validate_schemas.py)",
      "WebSearch",
      "WebFetch(domain:api.github.com)",
      "Bash(time:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "WebFetch(domain:pypi.org)",
      "Bash(cd:*)",
      "Bash(scriptscheck_version_consistency.bat)",
      "Bash(cmd /c:*)",
      "Bash(.venvScriptsgl --version)",
      "Bash(test:*)",
      "Bash(git grep:*)",
      "Bash(pytest:*)",
      "Bash(gh:*)",
      "Bash(git checkout:*)",
      "Bash(.venv\\Scripts\\python.exe -m pip install:*)",
      "Bash(del nul)",
      "Bash(git tag:*)",
      "Bash(git push:*)",
      "Bash(for:*)",
      "Bash(do sed -i 's/from tests.utils import/from tests.conftest import/' \"$file\")",
      "Bash(done)",
      "Bash(do sed -i 's/from tests.conftest import/from tests.test_utils import/' \"$file\")",
      "Bash(do sed -i '1,10s/from tests.test_utils import/import sys\\nfrom pathlib import Path\\nsys.path.insert(0, str(Path(__file__).parent.parent.parent))\\nfrom test_utils import/' \"$file\")",
      "Bash(do sed -i '1,10s/from tests.test_utils import/import sys\\nfrom pathlib import Path\\nsys.path.insert(0, str(Path(__file__).parent.parent))\\nfrom test_utils import/' \"$file\")",
      "Bash(awk:*)",
      "Bash([ -f coverage.xml ])",
      "Bash(coverage report:*)",
      "Bash(git fetch:*)",
      "Bash(git rev-list:*)",
      "Bash(trufflehog:*)",
      "Bash(pip uninstall:*)",
      "Bash(gzip:*)",
      "Bash(zcat:*)",
      "Bash(bash:*)"
    ],
    "deny": []
  }
}