{
  "permissions": {
    "allow": [
      "Bash(dir:*)",
      "Bash(find:*)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(pytest:*)",
      "Bash(python -m pytest:*)",
      "Bash(py -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "Bash(findstr:*)",
      "Bash(findstr /c:\".py:\" /c)",
      "Bash(where:*)",
      "Bash(powershell:*)",
      "Bash(echo:*)",
      "Bash(git log:*)",
      "Bash(cat:*)",
      "Bash(command -v:*)",
      "Bash(\"/c/Program Files/Python*/python.exe\" --version)",
      "Read(//c/**)",
      "Bash(/c/Users/aksha/AppData/Local/Microsoft/WindowsApps/python3:*)",
      "Bash(gh run list:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
<<<<<<< HEAD
      "WebFetch(domain:pypi.org)",
      "Bash(cd:*)",
      "Bash(scriptscheck_version_consistency.bat)",
      "Bash(cmd /c:*)",
      "Bash(.venvScriptsgl --version)",
      "Bash(test:*)",
      "Bash(git grep:*)",
      "Bash(pytest:*)",
      "Bash(gh:*)",
      "Bash(git checkout:*)",
      "Bash(.venv\\Scripts\\python.exe -m pip install:*)",
      "Bash(del nul)",
      "Bash(git tag:*)",
      "Bash(git push:*)",
      "Bash(for:*)",
      "Bash(do sed -i 's/from tests.utils import/from tests.conftest import/' \"$file\")",
      "Bash(done)",
      "Bash(do sed -i 's/from tests.conftest import/from tests.test_utils import/' \"$file\")",
      "Bash(do sed -i '1,10s/from tests.test_utils import/import sys\\nfrom pathlib import Path\\nsys.path.insert(0, str(Path(__file__).parent.parent.parent))\\nfrom test_utils import/' \"$file\")",
      "Bash(do sed -i '1,10s/from tests.test_utils import/import sys\\nfrom pathlib import Path\\nsys.path.insert(0, str(Path(__file__).parent.parent))\\nfrom test_utils import/' \"$file\")",
      "Bash(awk:*)",
      "Bash([ -f coverage.xml ])",
      "Bash(coverage report:*)",
      "Bash(git fetch:*)",
      "Bash(git rev-list:*)",
      "Bash(trufflehog:*)",
      "Bash(pip uninstall:*)",
      "Bash(gzip:*)",
      "Bash(zcat:*)",
      "Bash(bash:*)",
      "Bash(pip-audit:*)",
      "Bash(test_gl_installScriptspython.exe -m pip install --upgrade pip)",
      "Bash(test_gl_installScriptspython.exe -m pip install dist/greenlang-0.2.0-py3-none-any.whl)",
      "Bash(./test_gl_install/Scripts/python.exe -m pip install --upgrade pip)",
      "Bash(./test_gl_install/Scripts/python.exe -m pip install dist/greenlang-0.2.0-py3-none-any.whl)",
      "Bash(./test_gl_install/Scripts/gl.exe --version)",
      "Bash(./test_gl_install/Scripts/gl.exe --help)",
      "Bash(./test_gl_install/Scripts/python.exe -c \"import greenlang; print(greenlang.__version__)\")",
      "Bash(./test_gl_install/Scripts/python.exe -c \"import core.greenlang; print(core.greenlang.__version__)\")",
      "Bash(./test_gl_install/Scripts/python.exe -m pip install --upgrade pip --quiet)",
      "Bash(./test_gl_install/Scripts/python.exe -m pip install dist/greenlang-0.2.0-py3-none-any.whl --quiet)",
      "Bash(./test_gl_install/Scripts/gl.exe version)",
      "Bash(./test_gl_install/Scripts/gl.exe pack --help)",
      "Bash(./test_gl_install/Scripts/gl.exe pack list)",
      "Bash(./test_gl_install/Scripts/gl.exe doctor)",
      "Bash(./test_gl_install/Scripts/python.exe -c \"import core.greenlang; print(f''Version: {core.greenlang.__version__}''); from core.greenlang import PackRegistry, PackLoader, Executor; print(''Core imports OK'')\")",
      "Bash(.venv-test\\Scripts\\python.exe -m pip install:*)",
      "Bash(.\\.venv-test\\Scripts\\python.exe -m pip install:*)",
      "Bash(./.venv-test/Scripts/python.exe -m pip install:*)",
      "Bash(./.venv-test/Scripts/gl.exe --help)",
      "Bash(./.venv-test/Scripts/gl.exe version)",
      "Bash(./.venv-test/Scripts/gl.exe pack --help)",
      "Bash(./.venv-test/Scripts/python.exe -c \"import greenlang, sys; print(''OK'', greenlang.__version__)\")",
      "Bash(./.venv-test/Scripts/python.exe -c \"import core.greenlang as cg; print(''compat OK'', getattr(cg, ''__version__'', None))\")",
      "Bash(./.venv-test/Scripts/gl.exe doctor)",
      "Bash(tar:*)",
      "Bash(source:*)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(./gl.bat --version)",
      "Bash(docker:*)",
      "Bash(scriptsverify-docker-dod.bat)",
      "Bash(powershell:*)",
      "Bash(numfmt:*)",
      "WebFetch(domain:github.com)",
      "Bash(git show-ref:*)",
      "Bash(findstr:*)",
      "Bash(scriptsverify-docker-dod.bat akshay-greenlang 0.2.0)",
      "Bash(scripts\\verify-docker-dod.bat akshay-greenlang 0.2.0)",
      "Bash(cosign verify:*)",
      "Bash(git show:*)",
      "Bash(./scripts/validate-sbom-pipeline.sh:*)",
      "Bash(yamllint:*)",
      "Bash(cosign verify-attestation:*)",
      "Bash(./scripts/generate-sboms.bat --docker-only)",
      "Bash(syft version:*)",
      "Bash(./syft.exe version)",
      "Bash(./syft.exe:*)",
      "Bash(scripts\\verify-sbom-dod-windows.bat:*)",
      "Bash(./scripts/verify-sbom-dod-windows.bat:*)",
      "Bash(./jq.exe:*)",
      "Bash(git reset:*)",
      "Bash(\".venv-build/Scripts/python.exe\" -m pip install --upgrade pip build twine)",
      "Bash(\".venv-build/Scripts/python.exe\" -m build)",
      "Bash(\".venv-build/Scripts/twine.exe\" check dist/*)",
      "Bash(do echo \"File: $file\")",
      "Bash(\".venv-smoke/Scripts/python.exe\" -m pip install --upgrade pip)",
      "Bash(\".venv-smoke/Scripts/python.exe\" -m pip install dist/greenlang-0.2.0-py3-none-any.whl)",
      "Bash(\".venv-smoke/Scripts/gl.exe\" --version)",
      "Bash(\".venv-smoke/Scripts/gl.exe\" --help)",
      "Bash(.syft.exe scan dir:dist/ -o spdx-json=sbom/greenlang-dist-0.2.0.spdx.json)",
      "Bash(jq:*)",
      "Bash(\".venv-smoke-final/Scripts/python.exe\" -m pip install --upgrade pip --quiet)",
      "Bash(\".venv-smoke-final/Scripts/python.exe\" -m pip install dist/greenlang-0.2.0b1-py3-none-any.whl --quiet)",
      "Bash(\".venv-smoke-final/Scripts/gl.exe\" --version)",
      "Bash(\".venv-smoke-final/Scripts/gl.exe\" --help)",
      "Bash(\".venv-build/Scripts/python.exe\" -m build --quiet)",
      "Bash(\".venv-smoke-final/Scripts/pip.exe\" install dist/greenlang-0.2.0b1-py3-none-any.whl --quiet)",
      "Bash(\".venv-smoke-final/Scripts/python.exe\" -c \"import greenlang; print(''Version:'', greenlang.__version__)\")",
      "Bash(git cat-file:*)",
      "Bash(git filter-branch:*)",
      "Bash(set FILTER_BRANCH_SQUELCH_WARNING=1)",
      "Bash(git reflog:*)",
      "Bash(git gc:*)",
      "Bash(git for-each-ref:*)",
      "Bash(git update-ref:*)",
      "Bash(curl:*)",
      "Bash(.venv-buildScriptstwine.exe upload:*)",
      "WebFetch(domain:test.pypi.org)",
      "Bash(./test_testpypi_b2.bat)",
      "Bash(.venv-testpypi-testScriptsgl.exe --version)",
      "Bash(\".venv-testpypi-test\\Scripts\\gl.exe\" --version)",
      "Bash(call .venv-testpypi-testScriptsactivate)",
      "Bash(..venv-testpypi-testScriptsgl.exe --version)",
      "Bash(.venv-quick-testScriptspython.exe -m pip install --upgrade pip --quiet)",
      "Bash(.venv-quick-testScriptspython.exe -m pip install -i https://test.pypi.org/simple --extra-index-url https://pypi.org/simple greenlang==0.2.0b2 --quiet)",
      "Bash(.venv-quick-testScriptsgl.exe --version)",
      "Bash(.\\.venv-quick-test\\Scripts\\python.exe -m pip install:*)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(black:*)",
      "Bash(autoflake:*)",
      "Bash(coverage run:*)",
      "Bash(C:/Users/rshar/AppData/Roaming/Python/Python313/Scripts/gl.exe --version)",
      "Bash(./gl_global.bat --version)",
      "Bash(pip index versions:*)",
      "Bash(\".venv-pypi-test\\Scripts\\python.exe\" -m pip install --upgrade pip --quiet)",
      "Bash(\".venv-pypi-test\\Scripts\\python.exe\" -m pip install greenlang-cli==0.2.0 --quiet)",
      "Bash(\".venv-pypi-test\\Scripts\\gl.exe\" --version)",
      "Bash(\".venv-final-test\\Scripts\\python.exe\" -m pip install --upgrade pip --quiet)",
      "Bash(\".venv-final-test\\Scripts\\python.exe\" -m pip install greenlang-cli==0.2.0 --quiet)",
      "Bash(\".venv-final-test\\Scripts\\python.exe\" -m pip install greenlang-cli[analytics] --quiet)",
      "Bash(\".venv-final-test\\Scripts\\gl.exe\" --version)",
      "Bash(\".venv-final-test\\Scripts\\gl.exe\":*)",
      "Bash(pip search:*)",
      "Bash(gpg:*)",
      "Bash(test_install_envScriptspip install --upgrade pip setuptools wheel)",
      "Bash(test_install_envScriptspython -m pip install --upgrade pip setuptools wheel)",
      "Bash(test_install_env\\Scripts\\pip install \"dist/greenlang-0.2.1-py3-none-any.whl\")",
      "Bash(test_install_env\\Scripts\\python -m pip install \"dist\\greenlang-0.2.1-py3-none-any.whl\")",
      "Bash(\"test_install_env/Scripts/python\" -m pip install \"dist/greenlang-0.2.1-py3-none-any.whl\")",
      "Bash(\"test_install_env/Scripts/gl\" --version)",
      "Bash(\"test_install_env/Scripts/python\" -m pip uninstall -y greenlang)",
      "Bash(cyclonedx-py poetry:*)",
      "Bash(cyclonedx-py requirements:*)",
      "Bash(twine check:*)",
      "Bash(.venv-test-0.2.1Scriptspython.exe -m pip install --upgrade pip --quiet)",
      "Bash(.venv-test-0.2.1Scriptspython.exe -m pip install dist/greenlang-0.2.1-py3-none-any.whl --quiet)",
      "Bash(\".venv-test-0.2.1\\Scripts\\python.exe\" -m pip install --upgrade pip --quiet)",
      "Bash(\".venv-test-0.2.1\\Scripts\\python.exe\" -m pip install dist/greenlang-0.2.1-py3-none-any.whl --quiet)",
      "Bash(\".venv-test-0.2.1\\Scripts\\gl.exe\" --version)",
      "Bash(\".venv-test-0.2.1\\Scripts\\gl.exe\" doctor)",
      "Bash(twine upload:*)",
      "Bash(\".venv-verify-pypi\\Scripts\\python.exe\" -m pip install --upgrade pip --quiet)",
      "Bash(\".venv-verify-pypi\\Scripts\\python.exe\" -m pip install greenlang-cli==0.2.1 --quiet)",
      "Bash(\".venv-verify-pypi\\Scripts\\python.exe\":*)",
      "Bash(\".venv-verify-pypi\\Scripts\\gl.exe\" --version)",
      "Bash(ren:*)",
      "Bash(\".venv-verify-0.2.2\\Scripts\\python.exe\" -m pip install --upgrade pip --quiet)",
      "Bash(\".venv-verify-0.2.2\\Scripts\\python.exe\" -m pip install greenlang-cli==0.2.2)",
      "Bash(\".venv-verify-0.2.2\\Scripts\\python.exe\" -m pip install greenlang-cli==0.2.2 --no-cache-dir)",
      "Bash(\".venv-verify-0.2.2\\Scripts\\gl.exe\" --version)",
      "Bash(\".venv-final-test\\Scripts\\python.exe\" -m pip install greenlang-cli==0.2.2 --quiet)",
      "Bash(\".venv-test-v2\\Scripts\\python.exe\" -m pip install --upgrade pip --quiet)",
      "Bash(\".venv-test-v2\\Scripts\\python.exe\" -m pip install dist/greenlang_cli-2.0.0-py3-none-any.whl --quiet)",
      "Bash(\".venv-test-v2\\Scripts\\gl.exe\" --version)",
      "Bash(\".venv-test-v2\\Scripts\\gl.exe\" --help)",
      "Bash(.venv-buildScriptspython.exe -m pip install --upgrade pip build wheel twine --quiet)",
      "Bash(.venv-build/Scripts/python.exe -m pip install:*)",
      "Bash(.venv-build/Scripts/python.exe -m build:*)",
      "Bash(.venv-build/Scripts/twine.exe check dist/*)",
      "Bash(.venv-test-0.2.3\\Scripts\\python.exe -m pip install:*)",
      "Bash(.venv-test-0.2.3Scriptspip.exe install distgreenlang_cli-0.2.3-py3-none-any.whl --quiet)",
      "Bash(.venv-test-0.2.3/Scripts/python.exe -m pip install:*)",
      "Bash(.venv-test-0.2.3/Scripts/pip.exe install dist/greenlang_cli-0.2.3-py3-none-any.whl --quiet)",
      "Bash(.venv-test-0.2.3/Scripts/gl.exe --version)",
      "Bash(.venv-test-0.2.3/Scripts/gl.exe --help)",
      "Bash(syft:*)",
      "Bash(sh:*)",
      "Bash(./tools/syft.exe:*)",
      "Bash(unzip:*)",
      "Bash(.venv-build/Scripts/twine.exe upload --repository pypi dist/* --verbose)",
      "Bash(.venv-build/Scripts/twine.exe upload --repository pypi dist/*.whl dist/*.tar.gz --verbose)",
      "Bash(.venv-verify-pypi/Scripts/python.exe -m pip install:*)",
      "Bash(.venv-verify-pypi/Scripts/pip.exe install greenlang-cli==0.2.3 --quiet)",
      "Bash(.venv-verify-pypi/Scripts/gl.exe --version)",
      "Bash(git log:*)",
      "Bash(test-v030\\Scripts\\activate)",
      "Bash(test-v030\\Scripts\\gl.exe --version)",
      "Bash(test-v030\\Scripts\\python.exe -m pip install --upgrade pip --quiet)",
      "Bash(test-v030\\Scripts\\python.exe -m pip install dist/greenlang_cli-0.3.0-py3-none-any.whl --quiet)",
      "Bash(./test-v030/Scripts/python.exe -m pip install --upgrade pip --quiet)",
      "Bash(./test-v030/Scripts/python.exe -m pip install dist/greenlang_cli-0.3.0-py3-none-any.whl --quiet)",
      "Bash(./test-v030/Scripts/gl.exe --version)",
      "Bash(Scripts\\activate.bat)",
      "Bash(test-v030-audit\\Scripts\\pip.exe install --quiet dist/greenlang_cli-0.3.0-py3-none-any.whl)",
      "Bash(test-v030-audit/Scripts/pip.exe install --quiet dist/greenlang_cli-0.3.0-py3-none-any.whl)",
      "Bash(ruff check:*)",
      "Bash(git rev-parse:*)",
      "Bash(./test-v030-local/Scripts/python.exe -m pip install --upgrade pip --quiet)",
      "Bash(./test-v030-local/Scripts/pip.exe install dist/greenlang_cli-0.3.0-py3-none-any.whl --quiet)",
      "Bash(./test-v030-local/Scripts/gl.exe --version)",
      "Bash(./test-v030-local/Scripts/python.exe -c \"import greenlang, sys; print(''OK'', greenlang.__version__); sys.exit(0)\")",
      "Bash(test_venvScriptsactivate)",
      "Bash(test_venvScriptspython.exe -m pip install --upgrade pip --quiet)",
      "Bash(test_venvScriptspip.exe install distgreenlang_cli-0.3.0-py3-none-any.whl --quiet)",
      "Bash(test_venvScriptsgl.exe --version)",
      "Bash(.test_venvScriptspython.exe -m pip install --upgrade pip --quiet)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"EXISTS: $file\")",
      "Bash(else echo \"MISSING: $file\")",
      "Bash(cosign:*)",
      "Bash(./validate_demo.sh)",
      "Bash(git describe:*)",
      "Bash(./test-gl-install/Scripts/python.exe -m pip install --upgrade pip --quiet)",
      "Bash(./test-gl-install/Scripts/python.exe -m pip install dist/greenlang_cli-0.3.0-py3-none-any.whl --quiet)",
      "Bash(./test-gl-install/Scripts/gl.exe --version)",
      "Bash(./test-gl-install/Scripts/gl.exe --help)",
      "Bash(C:Python313python.exe -m pip install dist/greenlang_cli-0.3.0-py3-none-any.whl --force-reinstall)",
      "Bash(\"C:\\Python313\\python.exe\" -m pip install dist/greenlang_cli-0.3.0-py3-none-any.whl --force-reinstall)",
      "Bash(C:UsersrsharAppDataRoamingPythonPython313Scriptsgl.exe --version)",
      "Bash(\"C:\\Users\\rshar\\AppData\\Roaming\\Python\\Python313\\Scripts\\gl.exe\" --version)",
      "Bash(touch:*)",
      "Bash(git stash:*)",
      "Bash(test-v030-localScriptsactivate)",
      "Bash(./test-v030-local/Scripts/python.exe -m pytest tests/intelligence/test_tools_runtime.py -v --tb=short)",
      "Bash(./test-v030-local/Scripts/python.exe -m pip install pytest jsonpath-ng --quiet)",
      "Bash(./test-v030-local/Scripts/python.exe -m pip install pytest hypothesis pydantic jsonschema jsonpath-ng pint --quiet)",
      "Bash(./test-v030-local/Scripts/python.exe:*)",
      "Bash(../../../test-v030-local/Scripts/python.exe -m pip install ruff mypy --quiet)",
      "Bash(./test-v030-local/Scripts/ruff.exe check greenlang/intelligence/runtime/tools.py greenlang/intelligence/runtime/schemas.py greenlang/intelligence/runtime/units.py greenlang/intelligence/runtime/errors.py --quiet)",
      "Bash(./test-v030-local/Scripts/ruff.exe check:*)",
      "Bash(./test-v030-local/Scripts/black.exe:*)",
      "Bash(if exist .test_cache.json del .test_cache.json)",
      "Bash(set KMP_DUPLICATE_LIB_OK=TRUE)",
      "Bash(git mv:*)",
      "Bash(del test_query_integration.py)",
      "Bash(del test_uri_security.py test_safe_tool.py)",
      "Bash(..venv-test-v2Scriptspython.exe -m pytest tests/specs/test_agentspec_ok.py -v --tb=short)",
      "Bash(../../test-v030-local/Scripts/python.exe -m pytest tests/ -v --tb=short)",
      "Bash(../../test-v030-local/Scripts/python.exe -m pytest tests/test_agent.py::TestTestBoilerGolden::test_example_input -v)",
      "Bash(.gl.bat init --help)",
      "Bash(bandit:*)",
      "Bash(if not exist scripts mkdir scripts)",
      "Bash(del testsagentstest_industrial_process_heat_agent_ai_async_fixed.py)",
      "Bash(do echo \"=== Deploying $agent ===\")",
      "Bash(do echo \"=== $log ===\")",
      "Bash(head:*)"
    ],
    "deny": [],
    "ask": []
  }
}
