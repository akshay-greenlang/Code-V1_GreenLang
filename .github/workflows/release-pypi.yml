name: Release to PyPI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (publish to TestPyPI only)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write  # Required for creating releases
  id-token: write  # For trusted publishing

jobs:
  build-publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/greenlang-cli/

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version and verify tag
        run: |
          FILE_VER="$(cat VERSION | tr -d ' \n')"
          echo "VERSION=$FILE_VER" >> $GITHUB_ENV

          if [[ "${{ github.event_name }}" == "push" ]]; then
            TAG="${GITHUB_REF_NAME#v}"
            if [ "$TAG" != "$FILE_VER" ]; then
              echo "❌ Tag $TAG != VERSION $FILE_VER"
              exit 1
            fi
            echo "✅ Version check passed: $TAG"
          else
            echo "✅ Manual trigger - using VERSION file: $FILE_VER"
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine

      - name: Build package
        run: |
          python -m build
          echo "📦 Built packages:"
          ls -la dist/

      - name: Validate package
        run: |
          twine check dist/*
          echo "✅ Package validation passed"

      - name: Sign with Sigstore (optional)
        continue-on-error: true
        run: |
          python -m pip install sigstore
          python -m sigstore sign dist/*.whl dist/*.tar.gz
          echo "✅ Packages signed with Sigstore"

      - name: Publish to TestPyPI (dry run)
        if: ${{ github.event.inputs.dry_run == 'true' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          echo "🧪 Publishing to TestPyPI (dry run)..."
          python -m twine upload --repository testpypi dist/*

      - name: Publish to PyPI
        if: ${{ github.event.inputs.dry_run != 'true' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          echo "🚀 Publishing to PyPI..."
          if [ -z "${TWINE_PASSWORD}" ]; then
            echo "❌ Error: PYPI_API_TOKEN secret is not configured properly"
            echo "Please ensure the PYPI_API_TOKEN secret is set in your repository settings"
            echo "Go to: Settings > Secrets and variables > Actions"
            exit 1
          fi
          echo "✅ PyPI token is available, proceeding with upload..."
          python -m twine upload dist/*

      - name: Verify installation
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          sleep 30  # Give PyPI time to update
          python -m venv test-install
          . test-install/bin/activate
          pip install --upgrade pip
          pip install greenlang-cli==${{ env.VERSION }}
          gl --version
          python -c "import greenlang; print('✅ Import successful:', greenlang.__version__)"

      - name: Create GitHub Release
        if: ${{ github.event.inputs.dry_run != 'true' && startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: GreenLang v${{ github.ref_name }}
          body: |
            ## 🚀 GreenLang ${{ github.ref_name }} Released to PyPI

            ### Installation
            ```bash
            pip install greenlang-cli==${{ github.ref_name }}
            ```

            ### Verification
            ```bash
            gl --version
            ```

            ### Links
            - [PyPI Package](https://pypi.org/project/greenlang-cli/${{ github.ref_name }}/)
            - [Documentation](https://greenlang.io/docs)
            - [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          draft: false
          prerelease: false
          files: |
            dist/*.whl
            dist/*.tar.gz

      - name: Create GitHub Release (Manual)
        if: ${{ github.event.inputs.dry_run != 'true' && github.event_name == 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: GreenLang v${{ env.VERSION }}
          body: |
            ## 🚀 GreenLang v${{ env.VERSION }} Released to PyPI

            ### Installation
            ```bash
            pip install greenlang-cli==${{ env.VERSION }}
            ```

            ### Verification
            ```bash
            gl --version
            ```

            ### Links
            - [PyPI Package](https://pypi.org/project/greenlang-cli/${{ env.VERSION }}/)
            - [Documentation](https://greenlang.io/docs)
            - [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          draft: false
          prerelease: false
          files: |
            dist/*.whl
            dist/*.tar.gz