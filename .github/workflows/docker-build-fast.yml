name: Docker Build Fast (AMD64 Only)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '0.3.0'
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # No QEMU needed for amd64-only builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version metadata
        id: meta
        run: |
          VERSION="${{ github.event.inputs.version }}"
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_OUTPUT
          echo "DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Build and push runner (AMD64 only)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.runner
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/greenlang-runner:${{ steps.meta.outputs.VERSION }}
            ghcr.io/${{ github.repository_owner }}/greenlang-runner:${{ steps.meta.outputs.MAJOR_MINOR }}
            ghcr.io/${{ github.repository_owner }}/greenlang-runner:latest
          build-args: |
            GL_VERSION=${{ steps.meta.outputs.VERSION }}
            BUILD_DATE=${{ steps.meta.outputs.DATE }}
            VCS_REF=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push full (AMD64 only)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.full
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/greenlang-full:${{ steps.meta.outputs.VERSION }}
            ghcr.io/${{ github.repository_owner }}/greenlang-full:${{ steps.meta.outputs.MAJOR_MINOR }}
            ghcr.io/${{ github.repository_owner }}/greenlang-full:latest
          build-args: |
            GL_VERSION=${{ steps.meta.outputs.VERSION }}
            BUILD_DATE=${{ steps.meta.outputs.DATE }}
            VCS_REF=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test runner image
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/greenlang-runner:${{ steps.meta.outputs.VERSION }}
          docker run --rm ghcr.io/${{ github.repository_owner }}/greenlang-runner:${{ steps.meta.outputs.VERSION }} --version

      - name: Test full image
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/greenlang-full:${{ steps.meta.outputs.VERSION }}
          docker run --rm ghcr.io/${{ github.repository_owner }}/greenlang-full:${{ steps.meta.outputs.VERSION }} gl --version

      - name: Summary
        run: |
          echo "## Docker Build Complete! 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Images Published (AMD64 only):" >> $GITHUB_STEP_SUMMARY
          echo "- ghcr.io/${{ github.repository_owner }}/greenlang-runner:${{ steps.meta.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- ghcr.io/${{ github.repository_owner }}/greenlang-full:${{ steps.meta.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚠️ Note:" >> $GITHUB_STEP_SUMMARY
          echo "This is a fast build for AMD64 only. For multi-arch (including ARM64), use the full release workflow." >> $GITHUB_STEP_SUMMARY