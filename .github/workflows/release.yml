name: release

on:
  push:
    tags: ['v*']

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python  
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install GreenLang
      run: pip install -e .
    
    - name: Install additional tools
      run: |
        pip install cyclonedx-bom || true
    
    - name: Install cosign
      uses: sigstore/cosign-installer@v3
      with:
        cosign-release: 'v2.2.0'
    
    - name: Install ORAS
      run: |
        curl -LO "https://github.com/oras-project/oras/releases/latest/download/oras_linux_amd64.tar.gz"
        mkdir -p oras-install/
        tar -zxf oras_*.tar.gz -C oras-install/
        sudo mv oras-install/oras /usr/local/bin/
    
    - name: Verify tools
      run: |
        cosign version
        oras version
    
    - name: Validate packs
      run: gl pack validate packs/**/
    
    - name: Generate SBOMs
      run: |
        for pack_dir in $(find packs -name "pack.yaml" -type f | xargs dirname); do
          python -c "
from core.greenlang.provenance.sbom import generate_sbom
from pathlib import Path
generate_sbom(Path('$pack_dir'))
"
        done
    
    - name: Publish sample pack
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        gl pack publish packs/boiler-solar/ --registry ghcr.io/greenlang || echo "Pack publish failed"

  test-install:
    name: Test installation (${{ matrix.os }} / Python ${{ matrix.python-version }})
    needs: build
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-artifacts
        path: dist/
    
    - name: Test wheel installation
      run: |
        python -m pip install --upgrade pip
        pip install dist/*.whl
        python -c "import greenlang; print(f'GreenLang {greenlang.__version__} installed successfully')"
        greenlang --version
    
    - name: Test basic functionality
      run: |
        python -c "from greenlang.agents import FuelAgent; print('Core agents importable')"
        python -c "from greenlang.sdk import GreenLangClient; print('SDK importable')"

  publish-testpypi:
    name: Publish to TestPyPI
    needs: test-install
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    environment:
      name: testpypi
      url: https://test.pypi.org/p/greenlang
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-artifacts
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true

  test-testpypi:
    name: Test TestPyPI installation
    needs: publish-testpypi
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install from TestPyPI
      run: |
        python -m pip install --upgrade pip
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ greenlang
        python -c "import greenlang; print(f'GreenLang {greenlang.__version__} from TestPyPI works')"

  publish-pypi:
    name: Publish to PyPI
    needs: test-testpypi
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    environment:
      name: pypi
      url: https://pypi.org/p/greenlang
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-artifacts
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  verify-pypi:
    name: Verify PyPI installation
    needs: publish-pypi
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install from PyPI
      run: |
        python -m pip install --upgrade pip
        pip install greenlang
        python -c "import greenlang; print(f'GreenLang {greenlang.__version__} from PyPI verified')"
        greenlang --version
    
    - name: Run smoke tests
      run: |
        python -c "
        from greenlang.sdk import GreenLangClient
        client = GreenLangClient()
        print('SDK client initialized')
        agents = client.list_agents()
        print(f'Available agents: {len(agents)}')
        "