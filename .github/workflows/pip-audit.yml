name: pip-audit
on:
  pull_request:
  push:
    branches: [main, master]
  schedule:
    - cron: "0 2 * * *"  # nightly
  workflow_dispatch:  # manual trigger

jobs:
  audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Run pip-audit on requirements
        run: |
          set -e
          echo "Running pip-audit for Python ${{ matrix.python-version }}"

          # Check for different requirement files
          if [ -f requirements.txt ]; then
            echo "Auditing requirements.txt..."
            pip-audit -r requirements.txt --strict --desc --format json -o pip-audit-requirements.json || {
              echo "❌ Vulnerabilities found in requirements.txt"
              cat pip-audit-requirements.json
              exit 1
            }
            echo "✅ No vulnerabilities in requirements.txt"
          fi

          if [ -f requirements-dev.txt ]; then
            echo "Auditing requirements-dev.txt..."
            pip-audit -r requirements-dev.txt --strict --desc --format json -o pip-audit-dev.json || {
              echo "⚠️ Vulnerabilities found in dev dependencies"
              cat pip-audit-dev.json
              # Don't fail on dev dependencies, just warn
            }
          fi

          if [ -f pyproject.toml ]; then
            echo "Auditing pyproject.toml dependencies..."
            # Install the package first to get dependencies
            pip install -e . || true
            # Run audit on installed packages
            pip-audit --strict --desc --format json -o pip-audit-installed.json || {
              echo "❌ Vulnerabilities found in installed packages"
              cat pip-audit-installed.json
              exit 1
            }
            echo "✅ No vulnerabilities in installed packages"
          fi

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-results-${{ matrix.python-version }}
          path: |
            pip-audit-*.json
          retention-days: 30

  audit-summary:
    needs: audit
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: pip-audit-results-*
          merge-multiple: true

      - name: Create summary
        run: |
          echo "## 🔒 Dependency Security Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if ls pip-audit-*.json 1> /dev/null 2>&1; then
            for file in pip-audit-*.json; do
              if [ -s "$file" ]; then
                echo "### ⚠️ Issues found in $file:" >> $GITHUB_STEP_SUMMARY
                echo '```json' >> $GITHUB_STEP_SUMMARY
                cat "$file" | head -20 >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
              else
                echo "### ✅ No issues in $file" >> $GITHUB_STEP_SUMMARY
              fi
            done
          else
            echo "### ✅ All dependency checks passed!" >> $GITHUB_STEP_SUMMARY
          fi