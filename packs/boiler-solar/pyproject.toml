[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "greenlang-boiler-solar"
version = "0.2.0"
description = "Solar thermal analysis pack for industrial boilers using GreenLang"
readme = "CARD.md"
license = {text = "Commercial"}
authors = [
    {name = "GreenLang Team", email = "packs@greenlang.ai"}
]
maintainers = [
    {name = "GreenLang Team", email = "packs@greenlang.ai"}
]
keywords = [
    "greenlang",
    "solar",
    "thermal",
    "boiler",
    "industrial",
    "energy",
    "sustainability",
    "carbon",
    "emissions"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Manufacturing",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "greenlang>=0.1.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pvlib>=0.10.0",
    "matplotlib>=3.6.0",
    "jinja2>=3.1.2",
    "pyyaml>=6.0",
]

[project.urls]
Homepage = "https://greenlang.ai/packs/boiler-solar"
Documentation = "https://docs.greenlang.ai/packs/boiler-solar"
Repository = "https://github.com/greenlang/packs/boiler-solar"
Issues = "https://github.com/greenlang/packs/issues"

[project.entry-points."greenlang.packs"]
boiler-solar = "boiler_solar.manifest:get_manifest_path"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.3",
    "myst-parser>=2.0",
]

[tool.setuptools]
packages = ["boiler_solar"]
include-package-data = true

[tool.setuptools.package-data]
boiler_solar = [
    "*.yaml",
    "*.yml",
    "*.md",
    "agents/*.py",
    "datasets/*",
    "pipelines/*",
    "reports/*",
    "cards/*",
    "tests/*",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | __pycache__
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--cov=boiler_solar",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["boiler_solar"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]