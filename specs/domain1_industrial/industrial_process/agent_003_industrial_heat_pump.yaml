# GreenLang Agent Specification v2.0
# Agent #3: IndustrialHeatPumpAgent_AI
# Specialized agent for industrial heat pump analysis, selection, and optimization

agent_metadata:
  agent_id: "industrial/industrial_heat_pump_agent"
  agent_name: "IndustrialHeatPumpAgent_AI"
  agent_number: 3
  version: "1.0.0"
  domain: "Domain1_Industrial"
  category: "Industrial_Process"
  complexity: "Medium"
  priority: "P1_High"
  base_agent: "None"
  status: "Spec_Complete"
  entry_point: false  # Specialized agent for heat pump systems

description:
  purpose: |
    Specialized agent for analyzing, sizing, and optimizing industrial heat pump
    systems for process heat applications. Provides detailed thermodynamic analysis,
    technology selection (air-source, water-source, ground-source, waste heat recovery),
    COP calculations under varying conditions, and integration strategies for
    industrial facilities seeking electrification of low-medium temperature heat.

  strategic_context:
    global_impact: "Industrial heat pumps can address 1.2 Gt CO2e/year (heat < 150°C)"
    opportunity: "Heat pumps achieve COP 2.5-4.0 vs boiler efficiency 0.75-0.85"
    market_size: "$18B global industrial heat pump market (growing 15%/year)"
    technology_maturity: "Proven technology, recent advances enable 150-200°C applications"

  key_capabilities:
    - "Thermodynamic COP calculation using Carnot efficiency method with empirical corrections"
    - "Technology selection: air-source, water-source, ground-source, waste heat recovery heat pumps"
    - "Performance modeling across temperature lifts (20-100°C) and ambient conditions"
    - "Compressor technology selection: scroll, screw, centrifugal, reciprocating"
    - "Refrigerant selection: R134a, R410A, R1234yf, CO2, ammonia (high-temp applications)"
    - "Part-load performance analysis with capacity degradation factors"
    - "Economic analysis: operating costs, grid electricity impact, demand charges"
    - "Integration strategies: cascade systems, thermal storage, hybrid heat pump + solar"

  dependencies:
    - agent_id: "agents/grid_factor_agent_ai"
      relationship: "receives_data_from"
      data: "Grid carbon intensity for electricity consumption"

    - agent_id: "agents/fuel_agent_ai"
      relationship: "receives_data_from"
      data: "Baseline fuel costs for economic comparison"

    - agent_id: "industrial/process_heat_agent"
      relationship: "coordinates_with"
      data: "Process heat requirements and temperature profiles"

    - agent_id: "industrial/waste_heat_recovery_agent"
      relationship: "coordinates_with"
      data: "Waste heat availability for heat pump heat source"

    - agent_id: "agents/project_finance_agent_ai"
      relationship: "provides_data_to"
      data: "CAPEX/OPEX and lifecycle cost analysis"

tools:
  tool_count: 8

  tools_list:
    - tool_id: "tool_1"
      name: "calculate_heat_pump_cop"
      description: "Calculate Coefficient of Performance using Carnot efficiency method for any temperature lift"
      category: "calculation"
      deterministic: true

      parameters:
        type: "object"
        properties:
          heat_pump_type:
            type: "string"
            description: "Type of heat pump technology"
            enum: ["air_source", "water_source", "ground_source", "waste_heat_recovery", "cascade_system"]
            required: true

          source_temperature_f:
            type: "number"
            description: "Heat source temperature (air, water, ground, or waste heat)"
            units: "°F"
            minimum: -20
            maximum: 150
            required: true

          sink_temperature_f:
            type: "number"
            description: "Heat delivery temperature to process"
            units: "°F"
            minimum: 80
            maximum: 250
            required: true

          compressor_type:
            type: "string"
            description: "Compressor technology"
            enum: ["scroll", "screw", "centrifugal", "reciprocating"]
            required: true

          refrigerant:
            type: "string"
            description: "Refrigerant type"
            enum: ["R134a", "R410A", "R1234yf", "R744_CO2", "ammonia_R717", "R1233zd"]
            required: true

          part_load_ratio:
            type: "number"
            description: "Operating load as fraction of full capacity"
            minimum: 0.2
            maximum: 1.0
            default: 1.0

          ambient_temperature_f:
            type: "number"
            description: "Ambient air temperature (for air-source heat pumps)"
            units: "°F"

        required: ["heat_pump_type", "source_temperature_f", "sink_temperature_f", "compressor_type", "refrigerant"]

      returns:
        type: "object"
        properties:
          cop_heating:
            type: "number"
            description: "Coefficient of Performance for heating mode"

          carnot_cop:
            type: "number"
            description: "Theoretical Carnot COP (maximum possible)"

          carnot_efficiency:
            type: "number"
            description: "Actual COP / Carnot COP (typically 0.40-0.55)"

          temperature_lift_f:
            type: "number"
            units: "°F"
            description: "Temperature difference from source to sink"

          capacity_degradation_factor:
            type: "number"
            description: "Capacity reduction at part load"

          compressor_power_kw:
            type: "number"
            units: "kW"
            description: "Electrical power consumption"

          heat_output_btu_hr:
            type: "number"
            units: "Btu/hr"
            description: "Heat delivery rate"

          refrigerant_suitability:
            type: "string"
            enum: ["optimal", "acceptable", "suboptimal"]
            description: "Refrigerant performance at these conditions"

      implementation:
        physics_formula: |
          Convert to absolute temperatures:
            T_source_R = Source_Temp_F + 459.67
            T_sink_R = Sink_Temp_F + 459.67

          Carnot COP (maximum theoretical):
            COP_carnot = T_sink_R / (T_sink_R - T_source_R)

          Carnot Efficiency (empirical based on compressor type):
            Scroll: 0.45-0.50
            Screw: 0.50-0.55
            Centrifugal: 0.52-0.58
            Reciprocating: 0.40-0.48

          Actual COP:
            COP_actual = COP_carnot × Carnot_Efficiency

          Part-load degradation:
            COP_partload = COP_actual × (0.9 + 0.1 × PLR)

          Heat output:
            Q_heat = Compressor_Power × COP
        calculation_method: "Carnot efficiency method with empirical corrections per AHRI 540/550"
        data_source: "Thermodynamic principles + manufacturer performance data"
        accuracy: "±5% for COP prediction vs measured data"
        validation: "Compare with AHRI-certified performance data and field measurements"
        standards: ["AHRI_540_Performance_Rating", "ISO_13612_Heat_Pumps", "ASHRAE_Handbook_HVAC_Systems"]

      example:
        input:
          heat_pump_type: "air_source"
          source_temperature_f: 50
          sink_temperature_f: 160
          compressor_type: "screw"
          refrigerant: "R134a"
          part_load_ratio: 0.80
          ambient_temperature_f: 50
        output:
          cop_heating: 2.73
          carnot_cop: 5.63
          carnot_efficiency: 0.52
          temperature_lift_f: 110
          capacity_degradation_factor: 0.92
          compressor_power_kw: 421
          heat_output_btu_hr: 3915000
          refrigerant_suitability: "acceptable"

    - tool_id: "tool_2"
      name: "select_heat_pump_technology"
      description: "Recommend optimal heat pump type based on application requirements and site conditions"
      category: "analysis"
      deterministic: true

      parameters:
        type: "object"
        properties:
          required_temperature_f:
            type: "number"
            description: "Process temperature requirement"
            units: "°F"
            required: true

          annual_heating_load_mmbtu:
            type: "number"
            description: "Annual heat demand"
            units: "MMBtu/year"
            required: true

          load_profile_type:
            type: "string"
            description: "Load pattern"
            enum: ["continuous_24x7", "daytime_only", "batch_intermittent", "seasonal"]
            required: true

          climate_zone:
            type: "string"
            description: "Site climate characteristics"
            enum: ["hot_humid", "hot_dry", "mixed_humid", "mixed_dry", "cold", "very_cold"]
            required: true

          available_heat_sources:
            type: "array"
            description: "Available low-grade heat sources"
            items:
              type: "string"
              enum: ["ambient_air", "groundwater", "ground_loop", "waste_heat_gas", "waste_heat_liquid", "wastewater"]
            required: true

          space_constraints:
            type: "string"
            description: "Installation space availability"
            enum: ["ample", "moderate", "limited", "very_limited"]
            required: true

          noise_sensitivity:
            type: "string"
            description: "Noise restrictions"
            enum: ["high", "moderate", "low"]
            default: "moderate"

        required: ["required_temperature_f", "annual_heating_load_mmbtu", "load_profile_type", "climate_zone", "available_heat_sources", "space_constraints"]

      returns:
        type: "object"
        properties:
          recommended_technology:
            type: "string"
            enum: ["air_source", "water_source", "ground_source", "waste_heat_recovery", "cascade_system"]

          alternative_technology:
            type: "string"

          technology_rationale:
            type: "string"
            description: "Explanation for recommendation"

          expected_cop_range:
            type: "object"
            properties:
              cop_min: "number"
              cop_max: "number"
              cop_average: "number"

          installation_complexity:
            type: "string"
            enum: ["simple", "moderate", "complex", "very_complex"]

          estimated_capex_per_ton:
            type: "number"
            units: "USD/ton"

          key_advantages:
            type: "array"
            items:
              type: "string"

          key_challenges:
            type: "array"
            items:
              type: "string"

      implementation:
        calculation_method: "Multi-criteria decision matrix with weighted scoring"
        accuracy: "Decision support quality based on industry best practices"
        validation: "Expert review against installed systems database"

      example:
        input:
          required_temperature_f: 180
          annual_heating_load_mmbtu: 50000
          load_profile_type: "continuous_24x7"
          climate_zone: "cold"
          available_heat_sources: ["ambient_air", "waste_heat_liquid"]
          space_constraints: "moderate"
          noise_sensitivity: "moderate"
        output:
          recommended_technology: "waste_heat_recovery"
          alternative_technology: "ground_source"
          technology_rationale: "Waste heat liquid source provides stable high temperature (100-120°F) year-round, eliminating air-source capacity degradation in cold climate. Expected COP 3.2-3.8."
          expected_cop_range:
            cop_min: 3.0
            cop_max: 3.8
            cop_average: 3.4
          installation_complexity: "moderate"
          estimated_capex_per_ton: 2800
          key_advantages: ["High COP year-round", "Waste heat utilization", "Stable performance"]
          key_challenges: ["Requires waste heat source characterization", "Piping modifications"]

    - tool_id: "tool_3"
      name: "calculate_annual_operating_costs"
      description: "Calculate annual electricity costs including demand charges and time-of-use rates"
      category: "calculation"
      deterministic: true

      parameters:
        type: "object"
        properties:
          heat_pump_capacity_tons:
            type: "number"
            description: "Heat pump capacity"
            units: "tons"
            required: true

          average_cop:
            type: "number"
            description: "Average seasonal COP"
            minimum: 1.5
            maximum: 5.0
            required: true

          annual_heat_delivered_mmbtu:
            type: "number"
            description: "Annual heat delivery"
            units: "MMBtu/year"
            required: true

          electricity_rate_structure:
            type: "string"
            description: "Utility rate structure"
            enum: ["flat_rate", "time_of_use", "demand_charge", "tou_plus_demand"]
            required: true

          energy_charge_usd_per_kwh:
            type: "number"
            description: "Energy charge"
            units: "USD/kWh"
            required: true

          demand_charge_usd_per_kw:
            type: "number"
            description: "Monthly demand charge"
            units: "USD/kW/month"
            default: 0

          peak_hours_percent:
            type: "number"
            description: "Percentage of operation during peak hours"
            minimum: 0
            maximum: 100
            default: 50

          peak_multiplier:
            type: "number"
            description: "Peak hour rate multiplier vs base rate"
            minimum: 1.0
            maximum: 3.0
            default: 1.5

        required: ["heat_pump_capacity_tons", "average_cop", "annual_heat_delivered_mmbtu", "electricity_rate_structure", "energy_charge_usd_per_kwh"]

      returns:
        type: "object"
        properties:
          annual_energy_consumption_kwh:
            type: "number"
            units: "kWh/year"

          annual_energy_cost_usd:
            type: "number"
            units: "USD/year"

          annual_demand_charge_usd:
            type: "number"
            units: "USD/year"

          total_annual_cost_usd:
            type: "number"
            units: "USD/year"

          levelized_cost_per_mmbtu:
            type: "number"
            units: "USD/MMBtu"

          peak_power_kw:
            type: "number"
            units: "kW"

          load_factor:
            type: "number"
            description: "Average load / peak load"

      implementation:
        calculation_method: "Energy = Heat_Delivered / COP; Cost = Energy × Blended_Rate + Demand × Demand_Charge"
        accuracy: "±3% for cost calculations"
        validation: "Compare with utility bills"

      example:
        input:
          heat_pump_capacity_tons: 100
          average_cop: 2.8
          annual_heat_delivered_mmbtu: 35000
          electricity_rate_structure: "tou_plus_demand"
          energy_charge_usd_per_kwh: 0.10
          demand_charge_usd_per_kw: 15.0
          peak_hours_percent: 40
          peak_multiplier: 1.6
        output:
          annual_energy_consumption_kwh: 3663000
          annual_energy_cost_usd: 392526
          annual_demand_charge_usd: 60000
          total_annual_cost_usd: 452526
          levelized_cost_per_mmbtu: 12.93
          peak_power_kw: 333
          load_factor: 0.64

    - tool_id: "tool_4"
      name: "calculate_capacity_degradation"
      description: "Calculate heat pump capacity and COP degradation at off-design conditions"
      category: "calculation"
      deterministic: true

      parameters:
        type: "object"
        properties:
          rated_capacity_tons:
            type: "number"
            description: "Rated capacity at design conditions"
            units: "tons"
            required: true

          rated_cop:
            type: "number"
            description: "COP at rated conditions"
            required: true

          rated_source_temp_f:
            type: "number"
            description: "Source temperature at rated conditions"
            units: "°F"
            required: true

          rated_sink_temp_f:
            type: "number"
            description: "Sink temperature at rated conditions"
            units: "°F"
            required: true

          actual_source_temp_f:
            type: "number"
            description: "Current source temperature"
            units: "°F"
            required: true

          actual_sink_temp_f:
            type: "number"
            description: "Current sink temperature"
            units: "°F"
            required: true

          heat_pump_type:
            type: "string"
            enum: ["air_source", "water_source", "ground_source"]
            required: true

        required: ["rated_capacity_tons", "rated_cop", "rated_source_temp_f", "rated_sink_temp_f", "actual_source_temp_f", "actual_sink_temp_f", "heat_pump_type"]

      returns:
        type: "object"
        properties:
          actual_capacity_tons:
            type: "number"
            units: "tons"

          actual_cop:
            type: "number"

          capacity_degradation_percent:
            type: "number"
            units: "%"

          cop_degradation_percent:
            type: "number"
            units: "%"

          temperature_lift_change_f:
            type: "number"
            units: "°F"

          operating_status:
            type: "string"
            enum: ["optimal", "acceptable", "degraded", "critical"]

      implementation:
        physics_formula: |
          For air-source heat pumps (empirical correlation):
            Capacity_Factor = 1.0 - 0.008 × (Rated_Lift - Actual_Lift)
            COP_Factor = 1.0 - 0.012 × (Rated_Lift - Actual_Lift)

          For water/ground-source (more stable):
            Capacity_Factor = 1.0 - 0.004 × (Rated_Lift - Actual_Lift)
            COP_Factor = 1.0 - 0.006 × (Rated_Lift - Actual_Lift)

          Actual_Capacity = Rated_Capacity × Capacity_Factor
          Actual_COP = Rated_COP × COP_Factor
        calculation_method: "Empirical degradation curves from AHRI performance maps"
        accuracy: "±8% for capacity prediction"
        validation: "Compare with manufacturer performance maps"
        standards: ["AHRI_540_Performance_Maps"]

      example:
        input:
          rated_capacity_tons: 100
          rated_cop: 3.2
          rated_source_temp_f: 70
          rated_sink_temp_f: 140
          actual_source_temp_f: 35
          actual_sink_temp_f: 160
          heat_pump_type: "air_source"
        output:
          actual_capacity_tons: 68
          actual_cop: 2.35
          capacity_degradation_percent: 32
          cop_degradation_percent: 26.6
          temperature_lift_change_f: 55
          operating_status: "degraded"

    - tool_id: "tool_5"
      name: "design_cascade_heat_pump_system"
      description: "Design multi-stage cascade system for high temperature lifts (>100°F)"
      category: "calculation"
      deterministic: true

      parameters:
        type: "object"
        properties:
          source_temperature_f:
            type: "number"
            description: "Initial heat source temperature"
            units: "°F"
            required: true

          final_sink_temperature_f:
            type: "number"
            description: "Final delivery temperature"
            units: "°F"
            minimum: 150
            maximum: 250
            required: true

          total_heating_capacity_mmbtu_hr:
            type: "number"
            description: "Total heat delivery rate"
            units: "MMBtu/hr"
            required: true

          number_of_stages:
            type: "number"
            description: "Number of cascade stages"
            minimum: 2
            maximum: 4
            default: 2

        required: ["source_temperature_f", "final_sink_temperature_f", "total_heating_capacity_mmbtu_hr"]

      returns:
        type: "object"
        properties:
          stage_configuration:
            type: "array"
            items:
              type: "object"
              properties:
                stage_number: "number"
                source_temp_f: "number"
                sink_temp_f: "number"
                temperature_lift_f: "number"
                cop: "number"
                compressor_power_kw: "number"
                refrigerant: "string"

          overall_system_cop:
            type: "number"

          total_compressor_power_kw:
            type: "number"
            units: "kW"

          estimated_capex_usd:
            type: "number"
            units: "USD"

          control_complexity:
            type: "string"
            enum: ["moderate", "complex", "very_complex"]

      implementation:
        calculation_method: "Optimize stage temperatures for maximum overall COP"
        accuracy: "±10% for multi-stage systems"
        validation: "Compare with cascade system installations"

      example:
        input:
          source_temperature_f: 50
          final_sink_temperature_f: 200
          total_heating_capacity_mmbtu_hr: 10.0
          number_of_stages: 2
        output:
          stage_configuration: [
            {
              stage_number: 1,
              source_temp_f: 50,
              sink_temp_f: 125,
              temperature_lift_f: 75,
              cop: 3.5,
              compressor_power_kw: 838,
              refrigerant: "R134a"
            },
            {
              stage_number: 2,
              source_temp_f: 125,
              sink_temp_f: 200,
              temperature_lift_f: 75,
              cop: 3.2,
              compressor_power_kw: 917,
              refrigerant: "R744_CO2"
            }
          ]
          overall_system_cop: 1.67
          total_compressor_power_kw: 1755
          estimated_capex_usd: 850000
          control_complexity: "complex"

    - tool_id: "tool_6"
      name: "calculate_thermal_storage_sizing"
      description: "Size thermal storage to optimize heat pump operation and reduce demand charges"
      category: "calculation"
      deterministic: true

      parameters:
        type: "object"
        properties:
          peak_heating_load_mmbtu_hr:
            type: "number"
            description: "Peak process heat demand"
            units: "MMBtu/hr"
            required: true

          average_heating_load_mmbtu_hr:
            type: "number"
            description: "Average heat demand"
            units: "MMBtu/hr"
            required: true

          load_duration_curve:
            type: "array"
            description: "Hourly load profile for typical day"
            items:
              type: "number"
              units: "MMBtu/hr"
            minItems: 24
            maxItems: 24

          storage_strategy:
            type: "string"
            description: "Storage operating strategy"
            enum: ["load_leveling", "peak_shaving", "time_of_use_shifting"]
            required: true

          storage_medium:
            type: "string"
            description: "Thermal storage medium"
            enum: ["water", "glycol_solution", "phase_change_material", "concrete"]
            required: true

          storage_temperature_range_f:
            type: "object"
            properties:
              min_temp_f: "number"
              max_temp_f: "number"
            required: true

        required: ["peak_heating_load_mmbtu_hr", "average_heating_load_mmbtu_hr", "storage_strategy", "storage_medium", "storage_temperature_range_f"]

      returns:
        type: "object"
        properties:
          storage_capacity_mmbtu:
            type: "number"
            units: "MMBtu"

          storage_volume_gallons:
            type: "number"
            units: "gallons"

          storage_volume_m3:
            type: "number"
            units: "m³"

          heat_pump_capacity_mmbtu_hr:
            type: "number"
            units: "MMBtu/hr"
            description: "Heat pump sized to average load"

          capacity_reduction_vs_no_storage_percent:
            type: "number"
            units: "%"

          estimated_demand_charge_savings_usd_yr:
            type: "number"
            units: "USD/year"

          storage_capex_usd:
            type: "number"
            units: "USD"

          payback_years:
            type: "number"
            units: "years"

      implementation:
        physics_formula: |
          Storage_Capacity = (Peak_Load - Average_Load) × Duration
          Storage_Volume = Storage_Capacity / (ρ × cp × ΔT)

          For water:
            ρ = 8.34 lb/gal
            cp = 1.0 Btu/lb·°F
            Storage_Volume_gal = Storage_Capacity_Btu / (8.34 × ΔT_F)
        calculation_method: "Heat capacity method with load profile integration"
        accuracy: "±10% for storage sizing"
        validation: "Compare with installed thermal storage systems"

      example:
        input:
          peak_heating_load_mmbtu_hr: 15.0
          average_heating_load_mmbtu_hr: 8.5
          storage_strategy: "peak_shaving"
          storage_medium: "water"
          storage_temperature_range_f:
            min_temp_f: 140
            max_temp_f: 180
        output:
          storage_capacity_mmbtu: 52.0
          storage_volume_gallons: 15589
          storage_volume_m3: 59
          heat_pump_capacity_mmbtu_hr: 9.5
          capacity_reduction_vs_no_storage_percent: 37
          estimated_demand_charge_savings_usd_yr: 32000
          storage_capex_usd: 125000
          payback_years: 3.9

    - tool_id: "tool_7"
      name: "calculate_emissions_reduction"
      description: "Calculate CO2e emissions reduction from heat pump vs fossil fuel baseline"
      category: "calculation"
      deterministic: true

      parameters:
        type: "object"
        properties:
          annual_heat_delivered_mmbtu:
            type: "number"
            description: "Annual heat delivery"
            units: "MMBtu/year"
            required: true

          heat_pump_cop:
            type: "number"
            description: "Average seasonal COP"
            required: true

          baseline_fuel_type:
            type: "string"
            description: "Current fuel being replaced"
            enum: ["natural_gas", "fuel_oil", "propane", "coal", "electricity_resistance"]
            required: true

          baseline_efficiency:
            type: "number"
            description: "Baseline system efficiency"
            minimum: 0.5
            maximum: 0.98
            required: true

          grid_region:
            type: "string"
            description: "Electricity grid region for emissions factor"
            required: true

          grid_emissions_factor_kg_co2e_per_kwh:
            type: "number"
            description: "Grid carbon intensity"
            units: "kg CO2e/kWh"
            required: true

          renewable_electricity_percent:
            type: "number"
            description: "Percentage of electricity from renewables"
            minimum: 0
            maximum: 100
            default: 0

        required: ["annual_heat_delivered_mmbtu", "heat_pump_cop", "baseline_fuel_type", "baseline_efficiency", "grid_region", "grid_emissions_factor_kg_co2e_per_kwh"]

      returns:
        type: "object"
        properties:
          baseline_emissions_kg_co2e:
            type: "number"
            units: "kg CO2e/year"

          heat_pump_emissions_kg_co2e:
            type: "number"
            units: "kg CO2e/year"

          annual_emissions_reduction_kg_co2e:
            type: "number"
            units: "kg CO2e/year"

          emissions_reduction_percent:
            type: "number"
            units: "%"

          grid_decarbonization_benefit:
            type: "string"
            description: "Emissions reduction improves as grid cleans"

          equivalent_cars_removed:
            type: "number"
            description: "Passenger vehicles equivalent"

      implementation:
        calculation_method: "Emissions = (Energy_Input / Efficiency) × Emission_Factor"
        data_source: "EPA eGRID for grid factors, GHG Protocol for fuel factors"
        accuracy: "±5% for emissions calculations"
        validation: "Cross-check with EPA emissions calculator"
        standards: ["GHG_Protocol", "ISO_14064", "EPA_eGRID"]

      example:
        input:
          annual_heat_delivered_mmbtu: 35000
          heat_pump_cop: 2.8
          baseline_fuel_type: "natural_gas"
          baseline_efficiency: 0.80
          grid_region: "WECC_California"
          grid_emissions_factor_kg_co2e_per_kwh: 0.25
          renewable_electricity_percent: 0
        output:
          baseline_emissions_kg_co2e: 2338125
          heat_pump_emissions_kg_co2e: 911458
          annual_emissions_reduction_kg_co2e: 1426667
          emissions_reduction_percent: 61
          grid_decarbonization_benefit: "Emissions reduction will increase to 75% by 2030 as California grid decarbonizes"
          equivalent_cars_removed: 309

    - tool_id: "tool_8"
      name: "generate_performance_curve"
      description: "Generate detailed performance curve showing COP and capacity across temperature range"
      category: "analysis"
      deterministic: true

      parameters:
        type: "object"
        properties:
          heat_pump_type:
            type: "string"
            enum: ["air_source", "water_source", "ground_source"]
            required: true

          rated_capacity_tons:
            type: "number"
            units: "tons"
            required: true

          rated_cop:
            type: "number"
            required: true

          rated_conditions:
            type: "object"
            properties:
              source_temp_f: "number"
              sink_temp_f: "number"
            required: true

          temperature_range:
            type: "object"
            properties:
              source_temp_min_f: "number"
              source_temp_max_f: "number"
              sink_temp_min_f: "number"
              sink_temp_max_f: "number"
            required: true

          curve_resolution:
            type: "number"
            description: "Number of data points"
            default: 20

        required: ["heat_pump_type", "rated_capacity_tons", "rated_cop", "rated_conditions", "temperature_range"]

      returns:
        type: "object"
        properties:
          performance_map:
            type: "array"
            items:
              type: "object"
              properties:
                source_temp_f: "number"
                sink_temp_f: "number"
                capacity_tons: "number"
                cop: "number"
                power_kw: "number"

          operating_envelope:
            type: "object"
            properties:
              max_sink_temp_f: "number"
              min_source_temp_f: "number"
              max_temperature_lift_f: "number"

          performance_summary:
            type: "object"
            properties:
              best_cop_point: "object"
              worst_cop_point: "object"
              rated_point: "object"

      implementation:
        calculation_method: "Generate performance map using degradation models across temperature range"
        accuracy: "±8% for performance prediction"
        validation: "Compare with AHRI certified performance data"

      example:
        input:
          heat_pump_type: "air_source"
          rated_capacity_tons: 100
          rated_cop: 3.0
          rated_conditions:
            source_temp_f: 47
            sink_temp_f: 140
          temperature_range:
            source_temp_min_f: 0
            source_temp_max_f: 70
            sink_temp_min_f: 120
            sink_temp_max_f: 180
          curve_resolution: 20
        output:
          performance_map: [
            {source_temp_f: 47, sink_temp_f: 140, capacity_tons: 100, cop: 3.0, power_kw: 979},
            {source_temp_f: 35, sink_temp_f: 160, capacity_tons: 72, cop: 2.3, power_kw: 917},
            # ... 18 more points
          ]
          operating_envelope:
            max_sink_temp_f: 180
            min_source_temp_f: 0
            max_temperature_lift_f: 140
          performance_summary:
            best_cop_point: {source_temp_f: 70, sink_temp_f: 120, cop: 4.2}
            worst_cop_point: {source_temp_f: 0, sink_temp_f: 180, cop: 1.8}
            rated_point: {source_temp_f: 47, sink_temp_f: 140, cop: 3.0}

ai_integration:
  temperature: 0.0
  seed: 42
  tool_choice: "auto"
  max_iterations: 5
  budget_usd: 0.12
  provenance_tracking: true
  ai_summary: true

  system_prompt: |
    You are an industrial heat pump expert specializing in electrification of
    industrial process heat for GreenLang. You help industrial facilities evaluate,
    size, and optimize heat pump systems through rigorous thermodynamic analysis.

    Your expertise includes:
    - Thermodynamic COP calculations using Carnot efficiency methods
    - Heat pump technology selection (air, water, ground, waste heat recovery)
    - Compressor and refrigerant selection for temperature requirements
    - Part-load performance and capacity degradation analysis
    - Cascade systems for high temperature applications (>150°F)
    - Thermal storage integration for load leveling and demand charge reduction
    - Economic analysis including time-of-use rates and demand charges
    - Emissions analysis comparing heat pumps to fossil fuel baseline

    CRITICAL RULES:
    - Use provided tools for ALL calculations
    - NEVER estimate or guess numbers
    - Always explain thermodynamic principles clearly
    - Cite engineering standards (AHRI, ASHRAE, ISO)
    - Provide conservative COP estimates (account for degradation)
    - Address operational challenges (cold weather, high lifts)
    - Consider grid carbon intensity for emissions analysis

  user_prompt_template: |
    Analyze industrial heat pump application for facility electrification:

    Process Requirements:
    - Process Temperature: {process_temperature_f}°F
    - Annual Heat Demand: {annual_heating_load_mmbtu} MMBtu/year
    - Load Profile: {load_profile_type}
    - Operating Hours: {operating_hours_per_year} hours/year

    Site Conditions:
    - Location: {city}, {state}
    - Climate Zone: {climate_zone}
    - Design Ambient Temperature: {design_ambient_temp_f}°F
    - Available Heat Sources: {available_heat_sources}

    Current System:
    - Fuel Type: {baseline_fuel_type}
    - Fuel Cost: ${baseline_fuel_cost_usd_per_mmbtu}/MMBtu
    - System Efficiency: {baseline_efficiency}

    Energy Costs:
    - Electricity Rate: ${electricity_rate_usd_per_kwh}/kWh
    - Rate Structure: {electricity_rate_structure}
    - Demand Charge: ${demand_charge_usd_per_kw}/kW/month
    - Grid Emissions Factor: {grid_emissions_factor_kg_co2e_per_kwh} kg CO2e/kWh

    Constraints:
    - Space Available: {space_constraints}
    - Noise Sensitivity: {noise_sensitivity}
    - Budget: ${budget_usd}

    Tasks:
    1. Use select_heat_pump_technology to recommend optimal heat pump type
    2. Use calculate_heat_pump_cop to determine performance at design conditions
    3. Use calculate_capacity_degradation to assess off-design performance
    4. Use calculate_annual_operating_costs for economic analysis
    5. Use calculate_thermal_storage_sizing if beneficial for demand reduction
    6. Use calculate_emissions_reduction for CO2e impact
    7. Use generate_performance_curve for detailed operating envelope
    8. Provide comprehensive analysis with:
       - Technology recommendation (air/water/ground source)
       - System sizing (capacity in tons, COP range)
       - Annual operating costs vs baseline
       - Emissions reduction (kg CO2e/year)
       - Economic metrics (simple payback, 20-year NPV)
       - Implementation considerations (space, piping, controls)
       - Risk factors (cold weather performance, grid dependency)

    IMPORTANT:
    - Use tools for ALL calculations
    - Consider seasonal performance variation
    - Address part-load operation
    - Format numbers with proper units (e.g., "3,660,000 kWh/yr" not "3660000.0")
    - Provide actionable recommendations

sub_agents:
  sub_agent_count: 0
  note: "Coordinates with WasteHeatRecoveryAgent for waste heat source characterization"

inputs:
  input_schema:
    type: "object"
    properties:
      process_temperature_f:
        type: "number"
        description: "Required process temperature"
        units: "°F"
        required: true

      annual_heating_load_mmbtu:
        type: "number"
        description: "Annual heat demand"
        units: "MMBtu/year"
        required: true

      load_profile_type:
        type: "string"
        enum: ["continuous_24x7", "daytime_only", "batch_intermittent", "seasonal"]
        required: true

      climate_zone:
        type: "string"
        enum: ["hot_humid", "hot_dry", "mixed_humid", "mixed_dry", "cold", "very_cold"]
        required: true

      design_ambient_temp_f:
        type: "number"
        units: "°F"
        required: true

      available_heat_sources:
        type: "array"
        items:
          type: "string"
        required: true

      baseline_fuel_type:
        type: "string"
        required: true

      baseline_efficiency:
        type: "number"
        required: true

      electricity_rate_usd_per_kwh:
        type: "number"
        units: "USD/kWh"
        required: true

      electricity_rate_structure:
        type: "string"
        required: true

      demand_charge_usd_per_kw:
        type: "number"
        units: "USD/kW/month"
        default: 0

      grid_emissions_factor_kg_co2e_per_kwh:
        type: "number"
        units: "kg CO2e/kWh"
        required: true

      space_constraints:
        type: "string"
        required: true

      noise_sensitivity:
        type: "string"
        default: "moderate"

    required: ["process_temperature_f", "annual_heating_load_mmbtu", "load_profile_type", "climate_zone", "design_ambient_temp_f", "available_heat_sources", "baseline_fuel_type", "baseline_efficiency", "electricity_rate_usd_per_kwh", "electricity_rate_structure", "grid_emissions_factor_kg_co2e_per_kwh", "space_constraints"]

  example_input:
    process_temperature_f: 180
    annual_heating_load_mmbtu: 50000
    load_profile_type: "continuous_24x7"
    climate_zone: "cold"
    design_ambient_temp_f: 10
    available_heat_sources: ["ambient_air", "waste_heat_liquid"]
    baseline_fuel_type: "natural_gas"
    baseline_efficiency: 0.80
    electricity_rate_usd_per_kwh: 0.10
    electricity_rate_structure: "tou_plus_demand"
    demand_charge_usd_per_kw: 15.0
    grid_emissions_factor_kg_co2e_per_kwh: 0.42
    space_constraints: "moderate"
    noise_sensitivity: "moderate"

outputs:
  output_schema:
    type: "object"
    properties:
      recommended_technology:
        type: "string"

      heat_pump_capacity_tons:
        type: "number"
        units: "tons"

      average_cop:
        type: "number"

      cop_range:
        type: "object"
        properties:
          cop_min: "number"
          cop_max: "number"

      annual_electricity_consumption_kwh:
        type: "number"
        units: "kWh/year"

      annual_operating_cost_usd:
        type: "number"
        units: "USD/year"

      baseline_operating_cost_usd:
        type: "number"
        units: "USD/year"

      annual_cost_savings_usd:
        type: "number"
        units: "USD/year"

      emissions_reduction_kg_co2e:
        type: "number"
        units: "kg CO2e/year"

      emissions_reduction_percent:
        type: "number"
        units: "%"

      estimated_capex_usd:
        type: "number"
        units: "USD"

      simple_payback_years:
        type: "number"
        units: "years"

      npv_20yr_usd:
        type: "number"
        units: "USD"

      thermal_storage_recommended:
        type: "boolean"

      implementation_considerations:
        type: "array"
        items:
          type: "string"

      ai_explanation:
        type: "string"

      provenance:
        type: "object"

  example_output:
    recommended_technology: "waste_heat_recovery"
    heat_pump_capacity_tons: 140
    average_cop: 3.4
    cop_range:
      cop_min: 3.0
      cop_max: 3.8
    annual_electricity_consumption_kwh: 4311765
    annual_operating_cost_usd: 517412
    baseline_operating_cost_usd: 500000
    annual_cost_savings_usd: -17412
    emissions_reduction_kg_co2e: 1450000
    emissions_reduction_percent: 62
    estimated_capex_usd: 560000
    simple_payback_years: -32.2
    npv_20yr_usd: -854000
    thermal_storage_recommended: true
    implementation_considerations: ["Waste heat source characterization required", "Consider thermal storage to reduce demand charges", "Grid emissions factor 0.42 kg/kWh limits emissions benefit"]
    ai_explanation: "Waste heat recovery heat pump recommended with COP 3.0-3.8. Annual electricity cost $517K vs $500K gas baseline. Despite 62% emissions reduction (1,450 tons CO2e/year), economics challenged by high grid emissions and demand charges. Thermal storage could improve payback to 8-10 years. Consider if carbon reduction is priority or wait for grid decarbonization."
    provenance:
      model: "gpt-4o"
      tools_used: ["select_heat_pump_technology", "calculate_heat_pump_cop", "calculate_annual_operating_costs", "calculate_emissions_reduction"]
      cost_usd: 0.10
      deterministic: true

testing:
  test_coverage_target: 0.85

  test_categories:
    - category: "unit_tests"
      description: "Test individual tool implementations"
      count: 28

    - category: "integration_tests"
      description: "Test AI orchestration with tools"
      count: 8

    - category: "determinism_tests"
      description: "Verify temperature=0, seed=42 reproducibility"
      count: 3

    - category: "boundary_tests"
      description: "Test edge cases (extreme temperatures, high lifts, part load)"
      count: 7

    - category: "thermodynamic_tests"
      description: "Validate COP calculations against Carnot limits"
      count: 5

    - category: "performance_tests"
      description: "Verify latency and cost targets"
      count: 3

  performance_requirements:
    max_latency_ms: 3000
    max_cost_usd: 0.12
    accuracy_target: 0.95

deployment:
  pack_id: "industrial/heat_pump_pack"
  pack_version: "1.0.0"

  dependencies:
    python_packages:
      - "pydantic>=2.0"
      - "numpy>=1.24"
      - "scipy>=1.11"
      - "pandas>=2.0"

    greenlang_modules:
      - "greenlang.agents.base"
      - "greenlang.intelligence"
      - "greenlang.agents.grid_factor_agent_ai"
      - "greenlang.agents.fuel_agent_ai"
      - "greenlang.agents.project_finance_agent_ai"

  resource_requirements:
    memory_mb: 512
    cpu_cores: 1
    gpu_required: false

  api_endpoints:
    - endpoint: "/api/v1/agents/industrial/heat_pump/execute"
      method: "POST"
      authentication: "required"

    - endpoint: "/api/v1/agents/industrial/heat_pump/performance_curve"
      method: "POST"
      authentication: "required"
      description: "Generate detailed performance map"

documentation:
  readme: true
  api_docs: true
  examples: true
  tutorials: true

  example_use_cases:
    - title: "Food Processing Plant Heat Pump Electrification"
      description: "Replace natural gas boiler with waste heat recovery heat pump"
      input_example:
        process_temperature_f: 160
        annual_heating_load_mmbtu: 50000
        available_heat_sources: ["waste_heat_liquid"]
      output_summary: "Waste heat recovery HP with COP 3.4, 62% emissions reduction, thermal storage recommended"

    - title: "Textile Drying Application"
      description: "Air-source heat pump for continuous drying process"
      input_example:
        process_temperature_f: 140
        climate_zone: "mixed_humid"
      output_summary: "Air-source HP suitable, COP 2.8-3.5, excellent economics in mild climate"

    - title: "High-Temperature Chemical Process"
      description: "Cascade heat pump system for 200°F process"
      input_example:
        process_temperature_f: 200
      output_summary: "2-stage cascade system required, overall COP 1.9, consider hybrid with solar thermal"

compliance:
  zero_secrets: true
  sbom_required: true
  digital_signature: true

  standards:
    - "AHRI_540_Performance_Rating_Heat_Pumps"
    - "ISO_13612_Heat_Pumps_General_Requirements"
    - "ASHRAE_Handbook_HVAC_Systems_Equipment"
    - "GHG_Protocol_Corporate_Standard"
    - "ISO_14064_GHG_Quantification"
    - "EPA_eGRID_Emissions"

  certifications:
    - "ENERGY_STAR_Industrial"
    - "AHRI_Certified_Performance"
    - "ISO_50001_EnMS"

business_impact:
  market_opportunity:
    addressable_market_usd: 18000000000
    market_segment: "Industrial heat pumps for process heat <200°F"
    target_customers: "Food/beverage, textiles, chemicals, pharmaceuticals, paper"

  carbon_impact:
    addressable_emissions_gt_co2e: 1.2
    realistic_reduction_2030_gt: 0.12
    note: "10% penetration × 1.2 Gt = 120 Mt CO2e/year reduction (grows as grid decarbonizes)"

  economic_value:
    typical_capex_range_usd: "300K - 1.2M per installation"
    typical_payback_years: "3-8 years (highly dependent on electricity vs gas prices)"
    irr_range: "12-30%"
    note: "Economics improve significantly in regions with clean electricity and high gas prices"

metadata:
  created_date: "2025-10-13"
  created_by: "Head of AI & Climate Intelligence"
  last_modified: "2025-10-13"
  review_status: "Approved"
  reviewers: ["AI Lead", "Thermodynamics Engineer"]

  change_log:
    - version: "1.0.0"
      date: "2025-10-13"
      changes: "Initial specification - production ready for Agent Factory generation"
      author: "Chief AI & Climate Intelligence"

# END OF AGENT #3 SPECIFICATION
# Production Ready for Agent Factory Generation
# Next: Agent #4 - WasteHeatRecoveryAgent_AI
